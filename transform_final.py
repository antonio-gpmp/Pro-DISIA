import json
import pandas as pd

mapeo_cultivos_productos = {
    "ARROZ": ["ARROZ C√ÅSCARA"],
    "CEBADA": ["CEBADA (2 carreras)"],
    "MA√çZ": ["MA√çZ GRANO"],
    "PATATA": ["PATATA EXTRATEMP Y TEMPRANA", "PATATA MED ESTAC Y TARDIA"],
    "CHUFA": ["CHUFA"],
    "ALFALFA": ["HENO DE ALFALFA"],
    "NARANJO DULCE": ["NAVELINA", "W. NAVEL", "NAVEL LANE LATE", "SALUSTIANA", "VALENCIA LATE"],
    "MANDARINO": ["CLAUSELLINA-OKITSU", "SATSUMA-OWARI", "CLEMENRUBI", "MARISOL",
                  "CLEMENTINA DE NULES", "CLEMENTINA HERNANDINA", "CLEMENVILLA O NOVA",
                  "ORTANIQUE", "NADORCOTT", "OTRAS MANDARINAS H√çBRIDAS"],
    "LIMONERO": ["LIM√ìN VERNA", "LIM√ìN FINO (Mesero)"],
    "MANZANA": ["MANZANA CONSUMO FRESCO"],
    "N√çSPERO": ["NISPERO"],
    "PERA": ["PERA CONSUMO EN FRESCO"],
    "ALBARICOQUE": ["ALBARICOQUE CONSUMO EN FRESCO"],
    "MELOCOT√ìN (3)": ["MELOCOT√ìN  CONSUMO EN FRESCO"],
    "NECTARINA": ["NECTARINA"],
    "CEREZA": ["CEREZA"],
    "CIRUELA": ["CIRUELA"],
    "HIGOS": ["HIGOS Y BREVAS"],
    "GRANADA": ["GRANADA"],
    "CAQUI": ["CAQUI"],
    "UVA DE MESA": ["UVA DE MESA"],
    "ALMENDRA": ["ALMENDRA CASCARA"],
    "LECHUGA": ["LECHUGA TOTAL"],
    "COLIFLOR": ["COLIFLOR"],
    "TOMATE": ["TOMATE CONSUMO EN FRESCO"],
    "CEBOLLA": ["CEBOLLA"],
    "PIMIENTO": ["PIMIENTO CONSUMO EN FRESCO"],
    "ALCACHOFA": ["ALCACHOFA consumo fresco", "ALCACHOFA industria"],
    "MEL√ìN": ["MEL√ìN"],
    "SAND√çA": ["SAND√çA"],
    "JUD√çAS VERDES": ["JUD√çA VERDE (Plana)"],
    "UVA DE VINIFICACI√ìN": ["VINO BLANCO DOP+IGP  (R(CE) 479/2008)", "VINO BLANCO VARIETAL+OTROS (R(CE) 479/2008)",
             "VINO TINTO Y ROSADO DOP+IGP (R(CE) 479/2008)", "VINO TINTO Y ROSADO VARIETAL+OTROS (R(CE) 479/2008)"],
    "ACEITE DE OLIVA": ["Aceite de Oliva Virgen extra de < 0,8¬∫ (R(CE)1513/2001)",
                         "Aceite de Oliva Virgen de 0,8¬∫ a  2¬∫ (R(CE)1513/2001)",
                         "Aceite de Oliva Virgen de > 2¬∫ (R(CE)1513/2001)"],
    "FLORES (1)": ["FLOR CORTADA CLAVELES (euros/docena)", "FLOR CORTADA ROSAS (euros/docena)"]
}


# üü¢ Cargar los JSON limpios (cosechas, precios y meteorolog√≠a)
a√±os = list(range(2018, 2024))

cosechas = {a√±o: json.load(open(f"./cosecha/limpio_cosecha{a√±o}.json", "r", encoding="utf-8")) for a√±o in a√±os}
precios = {a√±o: json.load(open(f"./precios/limpio_precios_{a√±o}.json", "r", encoding="utf-8")) for a√±o in a√±os}
meteo = {a√±o: json.load(open(f"./meteo/limpio_precipitaciones_{a√±o}.json", "r", encoding="utf-8")) for a√±o in a√±os}

# üìä Lista para el dataset final
dataset = []

# üîÑ Iterar sobre cada a√±o
for a√±o in a√±os:
    for region, cultivos in cosechas[a√±o].items():
        for cultivo in cultivos:
            nombre_cultivo = cultivo["CULTIVOS"]
            superficie = cultivo.get(f"{a√±o}-superficie", 0)
            produccion = cultivo.get(f"{a√±o}-produccion", 0)

            # üîç Buscar productos en el mapeo
            productos = mapeo_cultivos_productos.get(nombre_cultivo, [nombre_cultivo])

            # üìå Generar una fila por cada producto asociado
            for producto in productos:
                precio_data = precios[a√±o].get(producto, {
                    "COMUNITAT VALENCIANA": 0, "ALICANTE": 0, "CASTELL√ìN": 0, "VALENCIA": 0
                })

                # üåß Obtener los datos meteorol√≥gicos de la regi√≥n
                meteo_data = meteo[a√±o].get(region, {mes: 0 for mes in ["ENE", "FEB", "MAR", "ABR", "MAY", "JUN",
                                                                         "JUL", "AGO", "SEP", "OCT", "NOV", "DIC",
                                                                         "TOTAL", "MEDIA"]})

                dataset.append({
                    "Anio": a√±o,
                    "Region": region,
                    "Cultivo": nombre_cultivo,
                    "Producto": producto,
                    "Superficie (ha)": superficie,
                    "Produccion (t)": produccion,
                    "Precio Comunitat Valenciana": precio_data["COMUNITAT VALENCIANA"],
                    "Precio Alicante": precio_data["ALICANTE"],
                    "Precio Castellon": precio_data["CASTELL√ìN"],
                    "Precio Valencia": precio_data["VALENCIA"],
                    "Precipitacion Ene": meteo_data["ENE"],
                    "Precipitacion Feb": meteo_data["FEB"],
                    "Precipitacion Mar": meteo_data["MAR"],
                    "Precipitacion Abr": meteo_data["ABR"],
                    "Precipitacion May": meteo_data["MAY"],
                    "Precipitacion Jun": meteo_data["JUN"],
                    "Precipitacion Jul": meteo_data["JUL"],
                    "Precipitacion Ago": meteo_data["AGO"],
                    "Precipitacion Sep": meteo_data["SEP"],
                    "Precipitacion Oct": meteo_data["OCT"],
                    "Precipitacion Nov": meteo_data["NOV"],
                    "Precipitacion Dic": meteo_data["DIC"],
                    "Precipitacion Total": meteo_data["TOTAL"],
                    "Precipitacion Media": meteo_data["MEDIA"]
                })

# üìä Convertir a DataFrame
df = pd.DataFrame(dataset)

# üì§ Guardar el dataset final
df.to_csv("dataset_final_completo.csv", index=False, encoding="utf-8")

print("‚úÖ Dataset con cultivos, precios y meteorolog√≠a guardado como 'dataset_final_completo.csv'")
